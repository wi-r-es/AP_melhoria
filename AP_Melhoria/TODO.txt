void register_card_return(RESERVATION *reservation, int card_number, int is_returned) {
    // Example: Mark the card as returned in the reservation record
    // For simplicity, assuming there's a field or mechanism to track card returns
    // This might involve checking against a list of issued cards within the reservation and updating their return status
    printf("Card %d return status updated for reservation %d.\n", card_number, reservation->num_reservation);

    if (!is_returned) {
        // Apply a charge for the unreturned card
        double charge_amount = 50.00; // Example charge amount
        reservation->valorCheckOut += charge_amount; // Add the charge to the total bill
        printf("Charge of %.2f applied for unreturned card %d.\n", charge_amount, card_number);
    }
}


void verify_services_and_calculate_bill(RESERVATION *reservation) {
    double total_amount = reservation->valorCheckOut; // Start with the current bill amount

    // Add costs of all registered services to the total bill
    for (int i = 0; i < sizeof(reservation->services) / sizeof(reservation->services[0]); i++) {
        if (reservation->services[i].value > 0) { // Assuming service was provided
            total_amount += reservation->services[i].value;
            printf("Service '%s' cost %.2f added to bill.\n", reservation->services[i].description, reservation->services[i].value);
        }
    }

    printf("Total bill for reservation %d is %.2f.\n", reservation->num_reservation, total_amount);
    reservation->valorCheckOut = total_amount; // Update the total bill amount
}

